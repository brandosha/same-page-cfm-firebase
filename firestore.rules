rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /{document=**} {
    	allow read, write: if false
    }
    
    function isMemberOfGroup(groupId) {
    	return exists(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.uid))
    }
    function isManagerOfGroup(groupId) {
    	return get(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.uid)).data.manager == true
    }
    
    match /groups/{groupId}/messages/{messageId} {
      allow get, create: if isMemberOfGroup(groupId)
      allow delete: if resource.data.sentBy == request.auth.uid || isManagerOfGroup(groupId)
    }
    
    match /groups/{groupId}/users/{userId} {
    	allow create, update: if isManagerOfGroup(groupId)
      allow delete: if userId == request.auth.uid || isManagerOfGroup(groupId)
    }
    
    match /users/{userId} {
    	allow read: if request.auth != null
      allow write: if request.auth.uid == userId
    }
  }
}